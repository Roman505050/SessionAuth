"""initial

Revision ID: e85354870e1d
Revises: 
Create Date: 2024-09-29 23:10:38.295993

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e85354870e1d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('users',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('email_codes',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('purpose', postgresql.ENUM('REGISTRATION', 'CHANGE_PASSWORD', name='email_code_purpose'), nullable=False),
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.Column('attempts', sa.SMALLINT(), nullable=False),
    sa.Column('max_attempts', sa.SMALLINT(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'ACCEPTED', 'REJECTED', 'EXPIRED', name='email_code_status'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('attempts <= max_attempts', name='check_attempts_max_attempts'),
    sa.CheckConstraint('attempts >= 0 AND attempts <= 16', name='check_limit_attempts'),
    sa.CheckConstraint('max_attempts >= 0 AND max_attempts <= 16', name='check_limit_max_attempts'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('sessions',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('browser', sa.String(length=64), nullable=True),
    sa.Column('browser_version', sa.String(length=64), nullable=True),
    sa.Column('os', sa.String(length=64), nullable=True),
    sa.Column('device', sa.String(length=64), nullable=True),
    sa.Column('ip_address', sa.String(length=39), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('users_roles_association',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('role_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_uuid'], ['roles.uuid'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('user_uuid', 'role_uuid', name='unique_user_role')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles_association')
    op.drop_table('sessions')
    op.drop_table('email_codes')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
